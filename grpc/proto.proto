//protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative grpc/proto.proto

syntax = "proto3";

package simpleGuide;

option go_package = "grpc/proto";

message AskForTimeMessage {
  int64 ClientId = 1;
}

message TimeMessage {
  string ServerName = 1;
  string Time = 2;
}

message ClientPublishMessage {
  int64 ClientId = 1;
  string Message = 2;
  int64 LamportTimestamp = 3;
}

message ServerPublishMessageOk {
  string ServerName = 1; 
  string Time = 2;
}

message ClientConnectMessage {
  string Name = 1;
  int64 ClientId = 2;
}

message MessageStreamConnection{
  string StreamMessage = 1;
  int64 LamportTimestamp = 2;
}

//client pov
service TimeAsk {
  /* rpc AskForTime(AskForTimeMessage) returns (TimeMessage); */
  rpc SendMessage(ClientPublishMessage) returns (ServerPublishMessageOk);
  rpc ConnectToServer(ClientConnectMessage) returns (stream MessageStreamConnection);
}

